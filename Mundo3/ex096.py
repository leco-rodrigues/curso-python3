# Fun√ß√£o que calcula √°rea:
    # Fa√ßa um programa que tenha uma fun√ß√£o chamada √°rea(), que receba as dimens√µes de um terreno retangular (largura e comprimento) e mostre a √°rea do terreno.

def show_exit_message(message: str = None) -> None:
    if message is None:
        message = "\n----------\nExiting program... Thanks for using it! üòÑ\n----------\n"
    print(message)


# Passo 1: Criar fun√ß√£o para calcular a "√°rea" a partir da "largura" e "comprimento"
def area(largura: float, comprimento: float) -> float:
    area_: float = largura * comprimento
    return area_


def input_medida(message: str = "Digite a medida:") -> float:
    prompt: str = message.strip() + " "
    while True:
        try:
            medida: str = str(input(prompt))
            if not (medida):
                raise ValueError("Campo vazio")
            if (medida.startswith(".")) or (medida.endswith(".")) or not all(c.isdigit() for c in medida.replace(".", "", 1)):
                    raise ValueError(f"O valor '{medida}' √© inv√°lido, valores n√£o num√©ricos n√£o s√£o aceitos")
            if (float(medida) <= 0):
                raise ValueError(f"O valor '{medida}' √© inv√°lido, 0 e valores negativos n√£o s√£o aceitos")
            return float(medida)
        except ValueError as vE:
            print(f"\n-------\nEntrada inv√°lida: {vE}. Por favor, insira um valor num√©rico positivo.\n-------\n")


# Passo 2: Solicitar valores para "largura" e "comprimento"
print("\n----------\nCALCULAR A √ÅREA DE UM TERRENO\n----------\n")

largura_terreno = input_medida("Digite a largura (m) do terreno:")
comprimento_terreno = input_medida("Digite o comprimento (m) do terreno:")

# Passo 3: Exibir tamanho da "√°rea"
area_terreno = area(largura_terreno, comprimento_terreno)

print(f"\n-------\n\nA √°rea de um terreno com {largura_terreno}m x {comprimento_terreno}m √© igual a {area_terreno}m¬≤.")

# Passo 4: Exibir mensagem de encerramento:
show_exit_message()
# ----------------| AULA 21 - FUN√á√ïES (PARTE 1) | DESAFIO [096]
